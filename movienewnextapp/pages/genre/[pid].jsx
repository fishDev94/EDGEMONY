import styles from "./index.module.scss";
import { useEffect, useRef, useCallback } from "react";
import Head from "next/head";
import { useBottomScrollListener } from "react-bottom-scroll-listener";
import { useRouter } from "next/router";
import { GET } from "../../utils/api";
import WrapperCard from "../../components/WrapperCard/WrapperCard";

export default function MovieList(props) {
  const cardContainer = useRef(null);

  const router = useRouter();
  const { pid } = router.query;

  const {
    typeofGenres,
    pageNumber,
    handleOnClickCard,
    setPageNumber,
    movieList,
    setMovieList,
    setGenreID,
    genreID,
    setCategory,
  } = props;

  const handleOnDocumentBottom = useCallback(() => {
    setPageNumber((prev) => prev + 1);
  }, []);

  useBottomScrollListener(handleOnDocumentBottom);

  useEffect(() => {
    pid &&
      GET(
        "discover",
        `${pid.split("&=")[2]}`,
        `&language=en-US&sort_by=popularity.desc&include_adult=false&page=${pageNumber}&with_genres=${
          pid.split("&=")[0]
        }&with_watch_monetization_types=flatrate`
      ).then((data) => {
        setMovieList(data.results);
        setGenreID(pid.split("&=")[0]);
        setCategory(pid.split("&=")[2]);
      });
  }, [pid]);

  useEffect(() => {
    pid &&
      GET(
        "discover",
        `${typeofGenres}`,
        `&language=en-US&sort_by=popularity.desc&include_adult=false&page=${pageNumber}&with_genres=${genreID}&with_watch_monetization_types=flatrate`
      ).then((data) => {
        setMovieList((prev) => [...prev, ...data.results]);
      });
  }, [genreID, pageNumber]);

  return (
    <>
      <Head>
        <title>Movie Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.MovieList}>
        <h2>{pid?.split("&=")[1]}</h2>
        <div className={styles.primaryContainer}>
          <div ref={cardContainer} className={styles.cardContainer}>
            {movieList &&
              movieList.map((item, index) => (
                <WrapperCard
                  data={item}
                  handleOnClickCard={handleOnClickCard}
                  key={index}
                  type="big"
                />
              ))}
          </div>
        </div>
      </div>
    </>
  );
}
